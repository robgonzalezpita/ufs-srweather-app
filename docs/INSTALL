# Simple setup instructions for the UFS SRW App 
# For more details, see the "Getting Started" guide:
# https://github.com/ufs-community/ufs-srweather-app/wiki/Getting-Started

# Getting the UFS SRW App code
#
# The SRW App can be downloaded directly from github, either by using `git clone` or by downloading
# from the web.

git clone https://github.com/ufs-community/ufs-srweather-app.git

cd ufs-srweather-app/
./manage_externals/checkout_externals

# We can build ufs-sreweather-app binaries in two ways.

# Method 1
# ========

# This is the simplest way to build the binaries

./devbuild.sh --platform=PLATFORM

# If compiler auto-detection fails, specify it using

./devbuild.sh --platform=PLATFORM --compiler=COMPILER

# Method 2
# ========

# The above instructions will work atleast on Tier-1 systems, if not on all supported machines.
# However, if it fails for some reason, we can build directly with cmake.

# First, we need to make sure that there is a modulefile "build_[PLATFORM]_[COMPILER]" in the
# "modulefiles" directory. Also, on some systems (e.g. Gaea/Odin) that come with cray module app,
# we may need to swap that for Lmod instead. Assuming your login shell is bash, run

source etc/lmod-setup.sh PLATFORM

# and if your login schell is csh/tcsh, source etc/lmod-setup.csh instead.

# From here on, we can assume Lmod is loaded and ready to go. Then we load the specific
# module for a given PLATFORM and COMPILER as follows

module use $PWD/modulefiles   #full path to modulefiles directory
module load build_[PLATFORM]_[COMPILER]

# Supported CMake flags:
#  -DCMAKE_INSTALL_PREFIX Location where the bin/ include/ lib/ and share/ directories containing
#                         the various components of the SRW App will be created. Recommended value
#                         is "..", one directory up from the build directory
#  -DCCPP_SUITES          A comma-separated list of CCPP suites to build with the UFS weather 
#                         model. See the User's Guide for a full list of available suites. The 
#                         default is to build with the released supported suites: FV3_GFS_v15p2 and
#                         FV3_RRFS_v1beta

mkdir build && cd build
cmake .. -DCMAKE_INSTALL_PREFIX=..
make -j 8


